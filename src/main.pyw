# -*- coding: utf8 -*-
#1
import discord
from discord.ext import commands, tasks
from config import settings
import asyncio
import requests
from bs4 import BeautifulSoup
from tabulate import tabulate
import random
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cbook as cbook
from urllib.request import urlopen
from PIL import Image



id_list = {'maxl1245#8177': '218495855',
          'DarkSoules#8541': '290164262',
          'AskoldoFFF#6716': '387772909'}

list2 = {'–Ü–≤–∞–Ω –ú–∞–∑–µ–ø–∞#8567': '–†—É—Å—è –ª–æ—Ö'}

chill_list = ['–¢—ã —á–µ–≥–æ —Ç–∞–∫–æ–π –∑–ª–æ–π :rage: :rage: –±—Ä–∞—Ç–∏—à–∫–∞?\n–ó–∞–±–æ–º–±–∏ –¥–∞—Ä–∫—Å–∞–π–¥–∏–∫–∞ –ø–æ–ø–ª–æ—Ç–Ω–µ–µ :smirk: :dash: –¥–ª—è\n—É—Å–ø–æ–∫–æ–µ–Ω–∏—è :relaxed: :relaxed: –Ω–∞–∫—É–º–∞—Ä–∏—Ç —Ç–∞–∫, —á—Ç–æ\n–∫–∞–π—Ñ–∞–Ω–µ—à—å :drooling_face: :drooling_face: —Å—Ä–∞–∑—É –ø–æ–¥–æ–±—Ä–µ–µ—à—å :innocent: :innocent: \n–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ) :grinning: :point_up_2:',
              '–ë—Ä–∞—Ç—É–ª–µ—Ü, –Ω–µ –∑–ª–∏—Å—å :smiling_imp: –ª—É—á—à–µ –ø—ã—Ö–Ω–∏\n–∫–æ–ª—è–Ω–¥—É–ø–æ–ª—ã :dash: –∏ –ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–∫\n—Ä—É–∫–æ–π :thumbsup: —Å–Ω–∏–º–µ—Ç –Ω–∞ —Ö–æ—Ä–æ—à–∏–π –ø–æ–∫—É—Ä –∏ \n—Å–æ–ª–Ω—Ü–µ  :sun_with_face: —è—Ä—á–µ –∏ –Ω–µ–±–æ :milky_way: —è—Å–Ω–µ–µ  :stuck_out_tongue_winking_eye: –¥—ã—à–∏ \n–ø–æ–ª–Ω–æ–π –∂–∏–∑–Ω—é, –∂–∏–≤–∏ —è—Ä–∫–æ–π –≥—Ä—É–¥—å—é :face_with_monocle:',
              '–ë—Ä–∞—Ç–∫–∞ :point_up:, —á–µ –∑–∞ –∞–≥—Ä–µ—Å–∏—è(agression):disappointed:\n–ø–æ–ø—ã—Ö—Ç–∏ :wind_blowing_face: –∫–∞–ª—É–º–±–∞—Ö—É –¥–≤–∞ —è–±–ª–æ—á–∫–∞ :apple: :green_apple: –∏ \n—Ä–∞—Å—Å–ª–∞–±—Å—è :smiling_imp: :kissing_heart: \n–î—ã–º —Ç–≤–æ–µ–º—É –¥–æ–º—É  :house: –±—Ä–∞—Ç'] 


bot = commands.Bot(command_prefix = settings['prefix']) # –¢–∞–∫ –∫–∞–∫ –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å –≤ settings, –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ª–æ–≤–∞—Ä—é —Å –∫–ª—é—á–æ–º prefix.

@bot.command() 
async def s(ctx, *args):  
    await ctx.send('https://cdn.discordapp.com/attachments/791596556297830422/799677669363941407/unknown.png')
    min_profit = 100 if len(args) == 0 else int(args[0])
    print(min_profit)
    num_page = 3
    num_stonks = 0
    msg = '---------------------------------------'
    for page in range(1, num_page + 1):
            html = requests.get("https://eu.tamrieltradecentre.com/pc/Trade/SearchResult?SearchType=Sell&ItemID=1068&ItemNamePattern=–ö–∞–º–µ–Ω—å+–¥—É—à&ItemCategory1ID=&ItemTraitID=&ItemQualityID=&IsChampionPoint=false&LevelMin=&LevelMax=&MasterWritVoucherMin=&MasterWritVoucherMax=&AmountMin=&AmountMax=&PriceMin=&PriceMax=&page=" + str(page) + "&SortBy=LastSeen&Order=desc&lang=ru-RU", headers = {'User-agent': 'your bot 0.1'}).text
            soup = BeautifulSoup(html, 'html5lib')
            sell_list = soup('tr', 'cursor-pointer')
            for i in range(10):
                if num_stonks >= 8:
                    break
                    
                id_now = int(sell_list[i].get('data-on-click-link').split('/')[-1])
                loc = sell_list[i]('td', 'hidden-xs')[1]('div')[0].text.strip() if len(sell_list[i]('td', 'hidden-xs')[1]('div')) > 0 else 'None'
                guild = sell_list[i]('td', 'hidden-xs')[1]('div')[1].text.strip() if len(sell_list[i]('td', 'hidden-xs')[1]('div')) > 0 else 'None'
                price_one = float(str(sell_list[i]('td', 'gold-amount bold')[0]).split()[6].replace(',', ''))
                num_goods = int(str(sell_list[i]('td', 'gold-amount bold')[0]).split()[14])
                all_price = str(sell_list[i]('td', 'gold-amount bold')[0]).split()[22]
                last_time = int(sell_list[i]('td', 'bold hidden-xs')[0].get('data-mins-elapsed'))

                profit =  (30 * num_goods) - (price_one * num_goods)
                if profit >= min_profit:
                    num_stonks += 1
                    msg += '\n–õ–æ–∫–∞—Ü–∏—è:   ' + loc
                    msg += '\n–ì–∏–ª—å–¥–∏—è:   ' + guild
                    msg += '\n–ó–∞ 1:   ' + str(price_one) + 'g'
                    msg += '\n–®—Ç—É–∫:   ' + str(num_goods)
                    msg += '\n–í—Å–µ–≥–æ:   ' + str(all_price) + '(' + str(price_one * num_goods) + ') g'
                    msg += '\n–ü—Ä–∏–±—ã–ª—å:   ' + str(profit) + 'g'
                    msg += '\n–ö–æ–≥–¥–∞ –∑–∞–º–µ—á–µ–Ω–æ:   ' + str(last_time) + '–º–∏–Ω. –Ω–∞–∑–∞–¥'
                    msg += '\n---------------------------------------'
            if num_stonks >= 8:
                break
    print(msg if msg != '---------------------------------------' else 'None')
    await ctx.send(msg if msg != '---------------------------------------' else 'https://tenor.com/view/not-stonks-profit-down-sad-frown-arms-crossed-gif-15684535')


@bot.command() 
async def hello(ctx):
    author = ctx.message.author
    if str(author) == '–Ü–≤–∞–Ω –ú–∞–∑–µ–ø–∞#8567':
        await ctx.send('–†—É—Å—è –ª–æ—Ö')
    elif str(author) == 'DarkSoules#8541':
        await ctx.send('–î–æ–±—Ä—ã–π –¥–µ–Ω—å –≥–æ—Å–ø–æ–¥–∏–Ω!')
        await ctx.send('https://tenor.com/view/youre-welcome-pleasure-keanu-reeves-its-a-pleasure-thank-you-gif-18395277')
    elif str(author) == '–•–æ–º—è—á–æ–∫üíÄBackstabüíÄ#0110':
        await ctx.send('–î–æ—Ä–æ–≤ –í–ò–¢–Æ–®–ê')
    else:
        await ctx.send(f'–ü–æ—à–µ–ª –Ω–∞—Ö—É–π , {author.mention}!')
    

@bot.command() 
async def putin(ctx):
    await ctx.send(f'‚£ø‚£ø‚£ø‚£µ‚£ø‚£ø‚£ø‚†ø‚°ü‚£õ‚£ß‚£ø‚£Ø‚£ø‚£ù‚°ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n‚£ø‚£ø‚£ø‚£ø‚£ø‚†ã‚†Å‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£ç‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø\n‚£ø‚£ø‚£ø‚£ø‚¢∑‚†Ñ‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£è‚¢º‚£ø‚£ø‚£ø‚£ø\n‚¢π‚£ø‚£ø‚¢ª‚†é‚†î‚£õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚£ø‚£ø‚£ø‚£ø\n‚¢∏‚£ø‚£ø‚†á‚°∂‚†Ñ‚£ø‚£ø‚†ø‚†ü‚°õ‚†õ‚†ª‚£ø‚°ø‚†ø‚†ø‚£ø‚£ó‚¢£‚£ø‚£ø‚£ø‚£ø\n‚†ê‚£ø‚£ø‚°ø‚£∑‚£æ‚£ø‚£ø‚£ø‚£æ‚£∂‚£∂‚£∂‚£ø‚£Å‚£î‚£§‚£Ä‚£º‚¢≤‚£ø‚£ø‚£ø‚£ø\n‚†Ñ‚£ø‚£ø‚£ø‚£ø‚£æ‚£ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚¢ü‚£æ‚£ø‚£ø‚£ø‚£ø\n‚†Ñ‚£ü‚£ø‚£ø‚£ø‚°∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£Æ‚£Ω‚†õ‚¢ª‚£Ω‚£ø‚°á‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø\n‚†Ñ‚¢ª‚£ø‚£ø‚£ø‚°∑‚†ª‚¢ª‚°ª‚£Ø‚£ù‚¢ø‚£ü‚£õ‚£õ‚£õ‚†ù‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n‚†Ñ‚†∏‚£ø‚£ø‚°ü‚£π‚£¶‚†Ñ‚†ã‚†ª‚¢ø‚£∂‚£∂‚£∂‚°æ‚†É‚°Ç‚¢æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n‚†Ñ‚†Ñ‚†ü‚†ã‚†Ñ‚¢ª‚£ø‚£ß‚£≤‚°Ä‚°Ä‚†Ñ‚†â‚†±‚£†‚£æ‚°á‚†Ñ‚†â‚†õ‚¢ø‚£ø‚£ø‚£ø\n‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†à‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚¢æ‚£æ‚£ø‚£ø‚£á‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†â‚†â\n‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†∏‚£ø‚£ø‚†ü‚†É‚†Ñ‚†Ñ‚¢à‚£ª‚£ø‚£ø‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ\n‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚¢ø‚£ø‚£æ‚£∑‚°Ñ‚†Ñ‚¢æ‚£ø‚£ø‚£ø‚°Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚°Ä\n‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†∏‚£ø‚£ø‚£ø‚†É‚†Ñ‚†à‚¢ø‚£ø‚£ø‚°á‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ ')


@bot.command() 
async def gimn(ctx):
    await ctx.send(f'https://youtu.be/qmj2m4UlEiE')
    

@bot.command() 
async def dotastat(ctx, *args):
    author = ctx.message.author
    num = 1 
    if len(args) > 0:
        if int(args[0]) > 15:
            await ctx.send('–ü–æ—à–µ–ª –Ω–∞—Ö—É–π ' + author.mention + ', –º–∞–∫–∏–º—É–º 15 –º–∞—Ç—á–µ–π.')
            num = 15
        else:
            num = int(args[0])
        
    id = id_list[str(author)]
    print(id_list[str(author)])
    
    html = requests.get("https://ru.dotabuff.com/players/" + id + "/matches?enhance=overview&page=1", headers = {'User-agent': 'your bot 0.1'}).text
    soup = BeautifulSoup(html, 'html5lib')
    games = soup('div', 'content-inner')[0]('section')[2]('tbody')[0]('tr')
    table = [['–ì–µ—Ä–æ–π', '–†–µ–∑—É–ª—å—Ç–∞—Ç','–¢–∏–ø','–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å','–£–°–ü','–î–∞—Ç–∞']]
    for i in range(num):
        line = []
        line.append('{}'.format(games[i].find('td', 'cell-large').a.text))
        line.append('{}'.format(games[i].find_all('td')[3].a.text))
        type2 = games[i].find_all('td', 'r-none-mobile')[1].find('div', 'subtext').text
        line.append('{}'.format(games[i].find_all('td', 'r-none-mobile')[1].text[:-len(type2)] + ': ' + type2))
        line.append('{}'.format(games[i].find_all('td')[5].text))
        line.append('{}'.format(games[i].find_all('td')[6].text))
        line.append('{}'.format(games[i].find_all('td')[3].time.get('title')[:-6]))
        table.append(line)
    print(f'{tabulate(table)}')
    await ctx.send(f'`{tabulate(table)}`')


@bot.command() 
async def chill(ctx):
    random.seed()
    await ctx.send(random.choice(chill_list))


@bot.command() 
async def anekdot(ctx, *args):  
    html = requests.get("https://baneks.site/random", headers = {'User-agent': 'your bot 0.1'}).text
    soup = BeautifulSoup(html, 'html5lib')
    split_1 = str(soup('section')[0]).split('<')[2:-2]
    split_2 = [i.split('>')[1] for i in split_1]
    msg = ''
    for line in split_2:
        msg += line + '\n'
    print(msg)
    await ctx.send(msg)


@bot.command() 
async def points(ctx, *args):
    def resize_image(input_image_path, output_image_path):
        n = 120
        size = [n, n]
        original_image = Image.open(input_image_path)
        width, height = original_image.size
        print('The original image size is {wide} wide x {height} high'.format(wide=width, height=height))
        
        if width > height:
            size[1] = int(height * n / width)
        else:
            size[0] = int(width * n / height)
            
        resized_image = original_image.resize(size)
        width, height = resized_image.size
        print('The resized image size is {wide} wide x {height} high'.format(wide=width, height=height))
        resized_image.save(output_image_path)
        
    url = ctx.message.attachments[0].url
    print(url)
    # downolad img
    braile = '‚†Å‚†Å‚†Ç‚†É‚†Ñ‚†Ö‚†Ü‚†á‚†à‚†â‚†ä‚†ã‚†å‚†ç‚†é‚†è‚†ê‚†ë‚†í‚†ì‚†î‚†ï‚†ñ‚†ó‚†ò‚†ô‚†ö‚†õ‚†ú‚†ù‚†û‚†ü‚††‚†°‚†¢‚†£‚†§‚†•‚†¶‚†ß‚†®‚†©‚†™‚†´‚†¨‚†≠‚†Æ‚†Ø‚†∞‚†±‚†≤‚†≥‚†¥‚†µ‚†∂‚†∑‚†∏‚†π‚†∫‚†ª‚†º‚†Ω‚†æ‚†ø‚°Ä‚°Å‚°Ç‚°É‚°Ñ‚°Ö‚°Ü‚°á‚°à‚°â‚°ä‚°ã‚°å‚°ç‚°é‚°è‚°ê‚°ë‚°í‚°ì‚°î‚°ï‚°ñ‚°ó‚°ò‚°ô‚°ö‚°õ‚°ú‚°ù‚°û‚°ü‚°†‚°°‚°¢‚°£‚°§‚°•‚°¶‚°ß‚°®‚°©‚°™‚°´‚°¨‚°≠‚°Æ‚°Ø‚°∞‚°±‚°≤‚°≥‚°¥‚°µ‚°∂‚°∑‚°∏‚°π‚°∫‚°ª‚°º‚°Ω‚°æ‚°ø‚¢Ä‚¢Å‚¢Ç‚¢É‚¢Ñ‚¢Ö‚¢Ü‚¢á‚¢à‚¢â‚¢ä‚¢ã‚¢å‚¢ç‚¢é‚¢è‚¢ê‚¢ë‚¢í‚¢ì‚¢î‚¢ï‚¢ñ‚¢ó‚¢ò‚¢ô‚¢ö‚¢õ‚¢ú‚¢ù‚¢û‚¢ü‚¢†‚¢°‚¢¢‚¢£‚¢§‚¢•‚¢¶‚¢ß‚¢®‚¢©‚¢™‚¢´‚¢¨‚¢≠‚¢Æ‚¢Ø‚¢∞‚¢±‚¢≤‚¢≥‚¢¥‚¢µ‚¢∂‚¢∑‚¢∏‚¢π‚¢∫‚¢ª‚¢º‚¢Ω‚¢æ‚¢ø‚£Ä‚£Å‚£Ç‚£É‚£Ñ‚£Ö‚£Ü‚£á‚£à‚£â‚£ä‚£ã‚£å‚£ç‚£é‚£è‚£ê‚£ë‚£í‚£ì‚£î‚£ï‚£ñ‚£ó‚£ò‚£ô‚£ö‚£õ‚£ú‚£ù‚£û‚£ü‚£†‚£°‚£¢‚££‚£§‚£•‚£¶‚£ß‚£®‚£©‚£™‚£´‚£¨‚£≠‚£Æ‚£Ø‚£∞‚£±‚£≤‚£≥‚£¥‚£µ‚£∂‚£∑‚£∏‚£π‚£∫‚£ª‚£º‚£Ω‚£æ‚£ø'


    p = requests.get(url)
    out = open('D:\\DiscordBot\\png\\img.png', "wb")
    out.write(p.content)
    out.close()

    im = Image.open('D:\\DiscordBot\\png\\img.png')
    rgb_im = im.convert('RGB')
    rgb_im.save('D:\\DiscordBot\\png\\img.jpg')

    resize_image('D:\\DiscordBot\\png\\img.jpg', 'D:\\DiscordBot\\png\\img.jpg')

    with cbook.get_sample_data('D:\\DiscordBot\\png\\img.jpg') as image_file:
        image = plt.imread(image_file)
    
    # black or white
    lst = []
    koef = image.mean()
    if len(args) > 0:
        koef = int(args[0])
        
    for i in range(len(image)):
        lst.append([])
        for j in range(len(image[i])):
            mean = np.mean(image[i][j])
            if mean > koef:
                lst[i].append(0)
            else:
                lst[i].append(1)

    lst = np.array(lst)
    lst = lst[0:len(lst)-(len(lst)%4)]
    lst = lst[:, 0:len(lst[0])-(len(lst[0])%2)]
    print(lst)
    # create msg
    msg = ''

    for i in range(0, len(lst), 4):
        for j in range(0, len(lst[i]), 2):
            d_arr = []
            num = 0
            d_arr.append(lst[i, j])
            d_arr.append(lst[i + 1, j])
            d_arr.append(lst[i + 2, j])
            d_arr.append(lst[i, j + 1])
            d_arr.append(lst[i + 1, j + 1])
            d_arr.append(lst[i + 2, j + 1])
            d_arr.append(lst[i + 3, j])
            d_arr.append(lst[i + 3, j + 1])
            
            for d in range(8):
                num += d_arr[d] * 2**d
                
            msg += braile[num]
        msg += '\n'
    print(msg)
    await ctx.send(msg)
    
bot.run(settings['token']) # –û–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ª–æ–≤–∞—Ä—é settings —Å –∫–ª—é—á–æ–º token, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞

